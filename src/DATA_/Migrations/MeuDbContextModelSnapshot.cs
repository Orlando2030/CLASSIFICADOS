// <auto-generated />
using System;
using DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DATA.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BUSINESS.Models.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AceitaTroca")
                        .HasColumnType("bit");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Combustivel")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Direcao")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Categoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Loja")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Marca")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Modelo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_SubCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_TipoAnucio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Imagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeAnuncio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_Antigo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Anuncios", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ID_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Loja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ID_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lojas", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_SubCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMarca")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("SubCategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoriaId");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Mensagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DS_Mensagem")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Anuncio")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ID_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagens", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Marca")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Anuncio")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.SubCategoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID_Categoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeSubCategoria")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubCategorias", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.TipoAnuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NomeTipoAnuncio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("TiposAnuncios", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("BUSINESS.Models.Anuncio", b =>
                {
                    b.HasOne("BUSINESS.Models.Pedido", null)
                        .WithMany("Anuncio")
                        .HasForeignKey("PedidoId");
                });

            modelBuilder.Entity("BUSINESS.Models.Categoria", b =>
                {
                    b.HasOne("BUSINESS.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .IsRequired();

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("BUSINESS.Models.Endereco", b =>
                {
                    b.HasOne("BUSINESS.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BUSINESS.Models.Loja", b =>
                {
                    b.HasOne("BUSINESS.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BUSINESS.Models.Marca", b =>
                {
                    b.HasOne("BUSINESS.Models.SubCategoria", "SubCategoria")
                        .WithMany("Marca")
                        .HasForeignKey("SubCategoriaId")
                        .IsRequired();

                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("BUSINESS.Models.Mensagem", b =>
                {
                    b.HasOne("BUSINESS.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .IsRequired();

                    b.HasOne("BUSINESS.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BUSINESS.Models.Modelo", b =>
                {
                    b.HasOne("BUSINESS.Models.Marca", "Marca")
                        .WithMany("Modelo")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("BUSINESS.Models.SubCategoria", b =>
                {
                    b.HasOne("BUSINESS.Models.Categoria", null)
                        .WithMany("SubCategoria")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("BUSINESS.Models.TipoAnuncio", b =>
                {
                    b.HasOne("BUSINESS.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .IsRequired();

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("BUSINESS.Models.Usuario", b =>
                {
                    b.HasOne("BUSINESS.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .IsRequired();

                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("BUSINESS.Models.Categoria", b =>
                {
                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("BUSINESS.Models.Marca", b =>
                {
                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("BUSINESS.Models.Pedido", b =>
                {
                    b.Navigation("Anuncio");
                });

            modelBuilder.Entity("BUSINESS.Models.SubCategoria", b =>
                {
                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
